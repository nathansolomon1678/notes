(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    217610,       4541]
NotebookOptionsPosition[    210273,       4430]
NotebookOutlinePosition[    210834,       4449]
CellTagsIndexPosition[    210791,       4446]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Let' s start by exploring the functions that we\[CloseCurlyQuote]ll often \
rely on to do the \[OpenCurlyDoubleQuote]heavy \
lifting\[CloseCurlyDoubleQuote] in our simulations
\
\>", "Text",
 CellChangeTimes->{{3.8831750749764*^9, 3.883175077729116*^9}, {
  3.883175183146091*^9, 3.883175184540543*^9}, {3.883175433536388*^9, 
  3.8831755488425293`*^9}},ExpressionUUID->"43fa8c35-49bb-4f08-8d31-\
c43c346366e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], "******)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Solve", "[", "]"}], " ", "solves", " ", "systems", " ", "of", 
    " ", "algebraic", " ", "equations"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"We", "'"}], "ll", " ", "store", " ", "our", " ", "system", " ", 
    "of", " ", "equations", " ", "in", " ", "eqnlist"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqnlist", " ", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], " ", "-", " ", "8"}], " ", "\[Equal]", " ", 
      "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "syntax", " ", "for", " ", 
    RowBox[{"Solve", "[", "]"}], " ", "is", " ", "pretty", " ", 
    "straightforward"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soln", " ", "=", " ", 
    RowBox[{"Solve", "[", 
     RowBox[{"eqnlist", ",", "x"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<\\nIf \!\(\*SuperscriptBox[\(x\), \(3\)]\) - 8 \[Equal] 0,\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<the roots are: \>\"", " ", ",", " ", "soln"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<or, if you prefer:  \>\"", ",", " ", 
    RowBox[{"soln", "//", "N"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Note", " ", "that", " ", "the", " ", "outer", " ", "list", " ", 
     "contains", " ", "a", " ", "list", " ", "of", " ", "single"}], "-", 
    RowBox[{"element", " ", "lists"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "each", " ", "interior", " ", "list", " ", "containing", " ", "one", " ", 
    "solution", " ", "to", " ", "the", " ", "system", " ", "of", " ", 
    "equations"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], "******)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Let", "'"}], "s", " ", "try", " ", "something", " ", 
      "trickier"}], "..."}], " ", "How", " ", 
    RowBox[{"about", ":"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqnlist", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "x", "]"}]}]}], "==", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<\\n\\nNow let's try to solve: Cos[x]-x Sin[x]==0\>\"", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"soln", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{"eqnlist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Note the warning!  The solution is not analytic.\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<\\nYou can silence warnings by tacking //Quiet on the\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<end of Solve[], but it's usually wiser to heed them.\>\"", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\\nIn this case, Solve[] returned: \>\"", ",", "soln"}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<\\nWhen Mathematica can't find an analytic solution,\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<the best answer is usually to repeat the question!\>\"", 
   "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "NSolve", " ", "looks", " ", "for", " ", "an", " ", "approximate", " ", 
    "numerical", " ", "solution"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<\\nNSolve[] looks for an approximate numerical solution\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soln", "=", " ", 
    RowBox[{"NSolve", "[", 
     RowBox[{"eqnlist", ",", "x"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Note the same warning!\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<NSolve[] returns: \>\"", ",", "soln"}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"The", " ", "problem", " ", "is"}], ",", " ", 
    RowBox[{
    "NSolve", " ", "tries", " ", "to", " ", "solve", " ", "the", " ", 
     "system", " ", "of"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"equations", " ", "first"}], ",", " ", 
    RowBox[{
    "then", " ", "use", " ", "the", " ", "result", " ", "to", " ", "find", 
     " ", "a", " ", "numerical"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"approximation", "..."}], "  ", "if", " ", "it", " ", 
       RowBox[{"can", "'"}], "t", " ", "solve", " ", "the", " ", "system"}], 
      "..."}], "..."}], "."}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<\\n\\nOf course, you can always estimate roots the old-fashioned way!\
\>\"", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "-", 
     RowBox[{"x", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<\\nYou can better your estimate using FindRoot:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<We'll start our (Newton's Method) search around x=x0\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"root", "[", "x0_", "]"}], " ", ":=", " ", 
    RowBox[{"FindRoot", "[", 
     RowBox[{"eqnlist", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x0"}], "}"}]}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"why", " ", "the", " ", "delayed", " ", "assignment", "??"}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<If we start at x0=2.5, FindRoot[] returns:  \>\"", ",", 
   RowBox[{"root", "[", "2.5", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<If we start at x0=9, FindRoot[] returns:  \>\"", ",", 
   RowBox[{"root", "[", "9", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<If we start at x0=11, FindRoot[] returns:  \>\"", ",", 
    RowBox[{"root", "[", "11", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Hmmmm - the answer doesn't always converge to the closest root!\>\"", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.883150468874875*^9, 3.883150482031175*^9}, {
   3.8831511984373727`*^9, 3.8831512450623636`*^9}, {3.883151297531128*^9, 
   3.8831512988905487`*^9}, {3.8831513810936155`*^9, 3.883151422577996*^9}, 
   3.8831515597186265`*^9, {3.8831516401561346`*^9, 3.883151651359304*^9}, {
   3.883151714390501*^9, 3.883151755609249*^9}, {3.88315179375478*^9, 
   3.8831518166454077`*^9}, {3.883151854426655*^9, 3.883151871989097*^9}, {
   3.883175553833179*^9, 3.883176733420704*^9}, {3.8831767642707777`*^9, 
   3.883177127126443*^9}, {3.8831771609141293`*^9, 3.883177537616519*^9}, {
   3.883177580945758*^9, 3.883177638451659*^9}, {3.883177697919478*^9, 
   3.883177906573542*^9}, {3.8831779766516314`*^9, 3.883178031806522*^9}, {
   3.883178066173028*^9, 3.883178275135106*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bf1ca5d3-12fb-412d-8bb0-d5197fec7022"],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\nIf \\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\) - 8 \
\[Equal] 0,\"\>"], "Print",
 CellChangeTimes->{3.883531175553548*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"cf2ea221-e91a-4119-90e2-b16d3d58a509"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"the roots are: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"1", "/", "3"}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"2", "/", "3"}]]}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "the roots are: ", {{$CellContext`x -> 
     2}, {$CellContext`x -> (-2) (-1)^Rational[1, 3]}, {$CellContext`x -> 
     2 (-1)^Rational[2, 3]}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531175566877*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e5970178-170e-4eec-a236-b68ab3cb1da5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"or, if you prefer:  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", "2.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "1.0000000000000002`"}], "-", 
        RowBox[{"1.7320508075688772`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "0.9999999999999996`"}], "+", 
        RowBox[{"1.7320508075688774`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
    "}"}]}],
  SequenceForm[
  "or, if you prefer:  ", {{$CellContext`x -> 2.}, {$CellContext`x -> 
     Complex[-1.0000000000000002`, -1.7320508075688772`]}, {$CellContext`x -> 
     Complex[-0.9999999999999996, 1.7320508075688774`]}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8835311755738707`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"dcbd4e80-4b12-4355-9806-6438e4f5ff37"],

Cell[BoxData["\<\"\\n\\nNow let's try to solve: Cos[x]-x Sin[x]==0\"\>"], \
"Print",
 CellChangeTimes->{3.883531175575705*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"915eaba3-2bb0-448a-8dd5-7ef4e011b072"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve.\"", 2,
    9, 1, 31646006837394961189, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883531175636457*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c45443dd-7346-4108-a3bf-d289fb555529"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Note the warning!  The solution is not analytic.\"\>"], \
"Print",
 CellChangeTimes->{3.8835311756608686`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2131f19d-957d-4240-b1c3-1439d61b32d5"],

Cell[BoxData["\<\"\\nYou can silence warnings by tacking //Quiet on \
the\"\>"], "Print",
 CellChangeTimes->{3.883531175662286*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9fda154a-f01d-4106-b126-81894875f496"],

Cell[BoxData["\<\"end of Solve[], but it's usually wiser to heed them.\"\>"], \
"Print",
 CellChangeTimes->{3.883531175664111*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"a28a7ec1-2edb-4a8f-95e8-0579c5f58912"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nIn this case, Solve[] returned: \"\>", "\[InvisibleSpace]", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], "\[Equal]", "0"}], "}"}], ",", 
     "x"}], "]"}]}],
  SequenceForm["\nIn this case, Solve[] returned: ", 
   Solve[{
    Cos[$CellContext`x] - $CellContext`x Sin[$CellContext`x] == 
     0}, $CellContext`x]],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531175665577*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"95b2b635-99ab-436e-bd7f-c06ed89f34fe"],

Cell[BoxData["\<\"\\nWhen Mathematica can't find an analytic solution,\"\>"], \
"Print",
 CellChangeTimes->{3.883531175666915*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d330f60b-e904-4128-a36f-3562f977f0d9"],

Cell[BoxData["\<\"the best answer is usually to repeat the question!\"\>"], \
"Print",
 CellChangeTimes->{3.88353117566826*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"c03a226b-d29e-4170-ad93-33e14e65ba99"],

Cell[BoxData["\<\"\\nNSolve[] looks for an approximate numerical \
solution\"\>"], "Print",
 CellChangeTimes->{3.8835311756695642`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4608159e-9677-49d9-ab46-d77f56c04cf4"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NSolve", "nsmet", 
   "\"This system cannot be solved with the methods available to NSolve.\"", 
   2, 17, 2, 31646006837394961189, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883531175691004*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"78f4425e-cf07-4c03-9e7d-a88e4152c3ca"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Note the same warning!\"\>"], "Print",
 CellChangeTimes->{3.8835311756959763`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"87a266fd-9897-4401-a979-20fa184bd930"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NSolve[] returns: \"\>", "\[InvisibleSpace]", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], "\[Equal]", "0"}], "}"}], ",", 
     "x"}], "]"}]}],
  SequenceForm["NSolve[] returns: ", 
   NSolve[{
    Cos[$CellContext`x] - $CellContext`x Sin[$CellContext`x] == 
     0}, $CellContext`x]],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531175697401*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d48781e4-0bf6-4b44-912b-eaae0687ddad"],

Cell[BoxData["\<\"\\n\\nOf course, you can always estimate roots the \
old-fashioned way!\"\>"], "Print",
 CellChangeTimes->{3.883531175699706*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"48c89141-37b3-4ff0-ace2-aea46f024d50"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.755657, 0.61117, 0.154498], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
OSurmJSNGC7TRfDO411m32gcKHmp3oCX4GcddbhBqykHOqywa+e0FBmSgl5p
79/DgXYn7ROY1iTDEc3Hql/dOdDyooDwro1k6Im4JNUcxYGuxa8c4XEmQ/oG
X+qeVA4ksufYist/BO8fOiTYlM+BmoumgmgXyDCyY+NyQxcRr/jYhPd9MmTP
s2espjnQ8TXbjokQfPVkpux4HT8JxUzY5pFfk2Gab6mrRo+EngXMi3wm+K5f
ohll0JyESu6Uul8k+PBf3ZsY3wES6m1tvXqe4Mv/VTb7qp4goYZxO+cqgk8P
OUknmV8loYSzSuMuBN/2HD/a4H6fhFDaqIEVwcd7r2Yuhb4goZ6azcYhBF93
kfynmYaT0KbEGNL/+XxXlvGBsi8ktNZua2oTwfedNwdH/OknIbfE/HX9hB74
0VL1nrREQjct930xJ/SCg7fIIJNCRoVzsSljhJ5oXbGTRMpklHpAqP4noTf2
xSZtP2xMRobnAi/TCD3yWbXv7CUrMrJNrJqI+r9eKdZKTzxCRpq6ci67Cbve
5kxLsT8Zka16RPYRemdnbzFXx3UyamZ+3ZpA6KGqQK51iwlklKG/sFuV0Etb
ha1cpd+QkdGhsrApQk99TImNWV9BRscfcW3jJHECMvpR6vCdjKKzOUdtCT32
oU7xX8AoGVWFXO7/Q+i1DUe8mfdJnMjHvSA1h9BzBVNvdr8T40T6POfulxJ6
z/DG/KUWdU50x0wKE/lD6E25zdlTG4n1j7flHhF6USfn+k+aLSdCu08UuzUR
/TVvEtL34EQrQpMvfCrJoPlDwtT2PCcq9uK6+orQKxknDvuciuJE8V2bf60l
+p0aP1bz6h0nmrfxwXviyMDUMpxvrOVE4tb2yZKEDkwqvag21smJ1H2CIPw8
oVeHhMLZvFxI/+CBMvEDhJ66vO+dpQwXKizPWW+4kwyxtIRe77VcSBeuit8h
dGCUqebWTHsu9HQx+ewElQxCn/1OV/sQ6wXV5QsrJLjhXpjSf5kLZYWoi2wc
IvRG1A4SK4ML5U72nj9RQoLzXcdKUua40M+roR6Rh0gw5/9qtFSIG53UGpdz
J+7fGf5Z2d9MbhSzK9bqnBoJTuqFBTF2cKOcP+3Nu/5ygEdomnHCA25UE0c+
VnaW0F2SI8eKXnKj8n63iLN2HHD0pf799lJu5N/Q6OphwAEHWz9OSw5xo7b0
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
       "]]},
     Annotation[#, "Charting`Private`Tag$4288#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0.75], FontSize -> 11, FontFamily -> "Ubuntu Mono"],
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-15, 15}, {-14.277026933857906`, 11.174074513822214`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.883531175835575*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"be807e2d-9c7d-4b21-bdfd-512c6bc86901"],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\nYou can better your estimate using FindRoot:\"\>"], \
"Print",
 CellChangeTimes->{3.883531175849519*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"f2203771-ee57-46c1-b3b4-5583500efb94"],

Cell[BoxData["\<\"We'll start our (Newton's Method) search around x=x0\"\>"], \
"Print",
 CellChangeTimes->{3.8835311758512506`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b2145717-fca3-47b5-b935-352fa6eb3460"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If we start at x0=2.5, FindRoot[] returns:  \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3.4256184594817283`"}], "}"}]}],
  SequenceForm[
  "If we start at x0=2.5, FindRoot[] returns:  ", {$CellContext`x -> 
    3.4256184594817283`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531175853468*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"809bbfd3-f2ef-4fd6-8115-934ced27a085"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If we start at x0=9, FindRoot[] returns:  \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "9.529334405361963`"}], "}"}]}],
  SequenceForm[
  "If we start at x0=9, FindRoot[] returns:  ", {$CellContext`x -> 
    9.529334405361963}],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531175854801*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e20f05d6-d3bd-4d93-a71f-96b992c74f6a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"If we start at x0=11, FindRoot[] returns:  \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "6.437298179171947`"}], "}"}]}],
  SequenceForm[
  "If we start at x0=11, FindRoot[] returns:  ", {$CellContext`x -> 
    6.437298179171947}],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531175856184*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"22c616e7-d891-4f3b-9e75-c0082684d1d5"],

Cell[BoxData["\<\"Hmmmm - the answer doesn't always converge to the closest \
root!\"\>"], "Print",
 CellChangeTimes->{3.883531175857483*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"bf92a32f-bc2f-4310-bfb3-8f84c7296de7"]
}, Open  ]]
}, Open  ]],

Cell["\<\



More often than not, we' ll be called upon to solve systems with differential \
equations ...


\
\>", "Text",
 CellChangeTimes->{{3.883177678345995*^9, 3.88317768994608*^9}, {
  3.883178321037476*^9, 
  3.8831783627846317`*^9}},ExpressionUUID->"0f9aecc3-a106-46d1-b3d1-\
f850df94e3f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], "******)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"We", "'"}], "ll", " ", "start", " ", "simple"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"make", " ", "sure", " ", "the", " ", 
     RowBox[{"add", " ", "[", "t", "]"}], " ", "to", " ", "all", " ", "the", 
     " ", 
     RowBox[{
      RowBox[{"(", "x", ")"}], "'"}], "s"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "'"}], ")"}], "'"}], "s"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "''"}], ")"}], "'"}], "s"}], "..."}], " ", "and", " ", 
     "so", " ", 
     RowBox[{"on", "!"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqnlist", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
       RowBox[{
        SuperscriptBox["\[Omega]0", "2"], " ", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"The", " ", "sytax", " ", "is", " ", "mostly", " ", "obvious"}], 
    " ", "-", " ", 
    RowBox[{
     RowBox[{"we", "'"}], "re", " ", "solving", " ", "for", " ", "the", " ", 
     "function", " ", 
     RowBox[{"x", "[", "t", "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"over", " ", "the", " ", "parameter", " ", "t"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soln", "=", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"eqnlist", ",", 
       RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"Important", ":", " ", 
    RowBox[{"What", " ", "does", " ", 
     RowBox[{"the", " ", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", 
     RowBox[{"do", "?"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<The solution to the system: \>\"", ",", "eqnlist", ",", 
   "\"\< looks like...\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "soln", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<(Note the undetermined constants!)\>\"", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], 
   "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<\\nNow add some initial conditions to resolve those constants.\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqnlist", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
       RowBox[{
        SuperscriptBox["\[Omega]0", "2"], " ", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "A"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soln", "=", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"eqnlist", ",", 
       RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<The solution to the system: \>\"", ",", "eqnlist", ",", 
   "\"\< looks like...\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "soln", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], 
   "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<\\nWhat if there is no analytic solution?  Consider a simple pendulum\
\>\"", "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqnlist", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
       RowBox[{
        SuperscriptBox["\[Omega]0", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "[", "t", "]"}], "]"}]}]}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "==", "A"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soln", "=", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"eqnlist", ",", 
       RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<The solution to the system: \>\"", ",", "eqnlist", ",", 
   "\"\< looks like...\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "soln", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<I guess I'm not really surprised...\>\"", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**"}], 
   "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<\\n\\nWe can use NDSolve to obtain a NUMERICAL solution\>\"", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Same", " ", "diff", " ", "eq"}], ",", " ", 
    RowBox[{"copied", " ", "for", " ", "convenience"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqnlist", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
        RowBox[{
         SuperscriptBox["\[Omega]0", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"x", "[", "t", "]"}], "]"}]}]}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "==", "A"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"But", " ", 
    RowBox[{"we", "'"}], "ll", " ", "need", " ", "numbers", " ", "to", " ", 
    RowBox[{"start", "!"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]0", " ", "=", " ", 
    RowBox[{"2", " ", "\[Pi]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tlo", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thi", "=", "5"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "few", " ", "important", " ", "observations"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"We", " ", "are", " ", "solving", " ", "for", " ", "x"}], ",", 
    " ", 
    RowBox[{"not", " ", 
     RowBox[{"x", "[", "t", "]"}], " ", "in", " ", 
     RowBox[{"NDSolve", "."}]}]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Note", " ", "that", " ", "we", " ", "still", " ", "use", " ", 
    RowBox[{"x", "[", "t", "]"}], " ", "in", " ", "the", " ", "diff", " ", 
    RowBox[{"eq", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "parameter", " ", 
    RowBox[{"(", "t", ")"}], " ", "is", " ", "given", " ", "with", " ", "the",
     " ", "range"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "of", " ", "values", " ", "the", " ", "numerical", " ", "approximation", 
    " ", "is", " ", "to"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"be", " ", "taken", " ", "over"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"soln", "=", 
    RowBox[{
     RowBox[{"NDSolve", "[", 
      RowBox[{"eqnlist", ",", "x", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"there", "'"}], "s", " ", 
    RowBox[{"that", " ", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", 
    RowBox[{"again", "!"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<NDSolve[] returns:  \>\"", ",", "soln"}], "]"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<NDSolve returns an interpolation table - let's put it to use!\\n\>\"",
    "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/.", "soln"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}]}], "]"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Not", " ", "bad"}], "..."}], "  ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<\\nWhat if we over-run the domain of the interpolation table?\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Short answer - make sure you don't!\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/.", "soln"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlo", ",", 
      RowBox[{"thi", "+", "2"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8831519653797183`*^9, 3.8831520086609645`*^9}, {
   3.883152061926602*^9, 3.883152071551601*^9}, {3.8831521675828447`*^9, 
   3.8831521686609783`*^9}, {3.883152211489154*^9, 3.883152238004779*^9}, {
   3.883152281161031*^9, 3.8831522862859697`*^9}, {3.883152395332845*^9, 
   3.883152405504781*^9}, {3.883152527879725*^9, 3.883152575473484*^9}, {
   3.883152672936675*^9, 3.883152677171043*^9}, {3.883152844398346*^9, 
   3.883152880382721*^9}, {3.883152934382718*^9, 3.8831529347421575`*^9}, {
   3.883152969148342*^9, 3.8831530028202314`*^9}, {3.883153116976468*^9, 
   3.8831531183514814`*^9}, {3.8831531844764667`*^9, 3.88315318666403*^9}, {
   3.883178375925498*^9, 3.8831788352242537`*^9}, {3.883178870497532*^9, 
   3.88317917484713*^9}, {3.8831792309828997`*^9, 3.88317957960105*^9}, 
   3.883179894934663*^9, {3.883180799746048*^9, 3.883181130008683*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"f376d841-ea2a-49c2-9e41-067fba7047c4"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The solution to the system: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Omega]0", "2"], " ", 
       RowBox[{"x", "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], "}"}],
    "\[InvisibleSpace]", "\<\" looks like...\"\>"}],
  SequenceForm[
  "The solution to the system: ", {$CellContext`\[Omega]0^2 \
$CellContext`x[$CellContext`t] + 
     Derivative[2][$CellContext`x][$CellContext`t] == 0}, " looks like..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531381714611*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"755a0fb3-2b8c-48cc-971f-eca32b84bc19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"t", " ", "\[Omega]0"}], "]"}]}], "+", 
    RowBox[{
     TemplateBox[{"2"},
      "C"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"t", " ", "\[Omega]0"}], "]"}]}]}]}], "}"}]], "Print",
 CellChangeTimes->{3.883531381720858*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"e059e091-8ab6-4174-b948-a30910f8f605"],

Cell[BoxData["\<\"(Note the undetermined constants!)\"\>"], "Print",
 CellChangeTimes->{3.8835313817230864`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"01114f8c-e491-4132-9d33-ce0a20fe2b12"],

Cell[BoxData["\<\"\\nNow add some initial conditions to resolve those \
constants.\"\>"], "Print",
 CellChangeTimes->{3.883531381724422*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"d7095cac-5d9a-4ad4-afd4-a70258ff60b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The solution to the system: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Omega]0", "2"], " ", 
        RowBox[{"x", "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "A"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}],
    "\[InvisibleSpace]", "\<\" looks like...\"\>"}],
  SequenceForm[
  "The solution to the system: ", {$CellContext`\[Omega]0^2 \
$CellContext`x[$CellContext`t] + 
     Derivative[2][$CellContext`x][$CellContext`t] == 
    0, $CellContext`x[0] == $CellContext`A, Derivative[1][$CellContext`x][0] == 
    0}, " looks like..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531381725774*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"82aea9c6-5569-4dd2-8945-93c80e1f52ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
   RowBox[{"A", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"t", " ", "\[Omega]0"}], "]"}]}]}], "}"}]], "Print",
 CellChangeTimes->{3.883531381728739*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"f94044b8-6ecb-4c1a-9f92-d25b96983333"],

Cell[BoxData["\<\"\\nWhat if there is no analytic solution?  Consider a \
simple pendulum\"\>"], "Print",
 CellChangeTimes->{3.8835313817299213`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"2894585e-452f-438d-89a8-bcf77d0b0619"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 42, 3, 31646006837394961189, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8835313823248787`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"29928c85-8553-4ace-8e5f-2659fc0733aa"],

Cell[BoxData[
 TemplateBox[{
  "DSolve", "bvfail", 
   "\"For some branches of the general solution, unable to solve the \
conditions.\"", 2, 42, 4, 31646006837394961189, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883531382409148*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"e26f18d2-f0a0-4f83-acf6-02223be7e8ad"],

Cell[BoxData[
 TemplateBox[{
  "DSolve", "bvfail", 
   "\"For some branches of the general solution, unable to solve the \
conditions.\"", 2, 42, 5, 31646006837394961189, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883531382458308*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"237f706b-4912-4675-959f-e98548690549"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 42, 6, 31646006837394961189, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883531382465458*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"331f4a09-cbc1-4c2d-9789-04ab25574c43"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The solution to the system: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Omega]0", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "A"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}],
    "\[InvisibleSpace]", "\<\" looks like...\"\>"}],
  SequenceForm["The solution to the system: ", {$CellContext`\[Omega]0^2 Sin[
        $CellContext`x[$CellContext`t]] + 
     Derivative[2][$CellContext`x][$CellContext`t] == 
    0, $CellContext`x[0] == $CellContext`A, Derivative[1][$CellContext`x][0] == 
    0}, " looks like..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531382472674*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"72c1411e-a57b-4966-8995-bb7fcefad78c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Print",
 CellChangeTimes->{3.88353138247427*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"aceef128-fc9a-4344-ac5a-bf8a589d32a6"],

Cell[BoxData["\<\"I guess I'm not really surprised...\"\>"], "Print",
 CellChangeTimes->{3.883531382476593*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"21c6d36a-63c2-4378-9c0f-7e1724bc9aee"],

Cell[BoxData["\<\"\\n\\nWe can use NDSolve to obtain a NUMERICAL \
solution\"\>"], "Print",
 CellChangeTimes->{3.8835313824780073`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"4e06d257-224a-4285-86d6-eda38a2c818f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"NDSolve[] returns:  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/dj4D+//////vPzd0wYnD
3bQ/CyGyRfuC7D/SUFjDa77FP5i3rykmieE/IqE47Akn0D9DtbPrfN+1P9Wb
k3tZVNU/CS+wv1D52L+7wbiC/fHaP6IKjaHveOm/gEqXStgX4D8CbiSDo4Pv
v7tJtw/c7uI/m7ZEhFwx7r/ziT6XnbjlP/A9woWoMOW/2iBupGZS6D+m9oct
D0vOv1rNgu1ZJOs/ZB4KTetj0j+J0D+8VMbtP3twa0+NiOY/WwqypoYt8D+R
Ney8YGPuPz63Ng34k/E/J3FtIGJy7z94j482beLyP9dfaIlRROk/f/LaffdM
9D8hkoyqKxHYPwX2WabgsPU/FPQfJud+wb/iJK2Rzfz2P/luGXLEpeK/jN7y
ms9k+D8uBQOYqQztv43DDGfVtPk/ZDwHeAz5779bMxlR8CD7P7bvr0FSLuu/
p0NZHGqG/D+3jtAlxK3ev0t/barn0/0/PJZGZVnUhr+8RXRWej3/P0YWO7ve
ut8/wpunYohHAEDjkh5uFAPrP+XkrgoD7QBAQ44v6/jY7z9vc69BiKABQI0X
XpK5Xe0/pRcaWg9IAkBHDxQ0wjHkP0EBfgGh/QJAtL2GFQaDwz8cu3sZ4q8D
QJicPo9RLde/oorjEiVWBEA21xHo0hfov4+fRJtyCgVAK250MaVS778oyg8F
wrIFQPCqZGmS2+6/AMV038BXBkBwM+aIBrDnvz4F00jKCgdAd9YreXnA078o
W5uT1bEHQGpa2FXTjcY/ePZcbetmCECEYLSsJb7kP3SniCgDEAlAxYu/NrOw
7T+vKE5UyrUJQO6WctZb4u8/Ue8MD5xpCkChrsxwlYTqP5/LNatvEQtAOSH5
e/RG3j9T7VfWTccLQJPyDcj1wKS/R98Tctt5DEA0c0hBmRbhv+bmOe9qIA1A
tAfWcTGi67/rM1n7BNUNQG9gCdCk/u+/nJbi6KB9DkCgL6z32LTsv4zJBUfs
Ig9AAWACFZUX47/iQSI0QtYPQBJ4HPPhcL2/8mdUAc0+EEBru4LJ2oPXP6ZR
FDB+mRBAN5nYXf0X6T96IyEXh/IQQIWEzxiwke8/JADj7pBFEUAXy+/fa4nu
P4F/IQ6gnxFAJ9eN+g/m5T+0CRUesPMRQLOe0f3kutA/mjaFdcVOEkAzQuJI
jB/Rv59LQoUyqBJAlKEMyv2/5r96a7SFoPsSQAODoxvthu6/CC6jzRNWE0D4
vTgRXlTvv2z7RgaIqhNAzh/hdA/K6L8yFFD6//8TQDTLsN9gaNi/5C3g0A==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6505#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                    GrayLevel[0.75], FontSize -> 11, FontFamily -> 
                    "Ubuntu Mono"], DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 5.}, {-0.9998344481673608, 
                   0.9999999999998582}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "5.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/dj4D+//////vPzd0wYnD
3bQ/CyGyRfuC7D/SUFjDa77FP5i3rykmieE/IqE47Akn0D9DtbPrfN+1P9Wb
k3tZVNU/CS+wv1D52L+7wbiC/fHaP6IKjaHveOm/gEqXStgX4D8CbiSDo4Pv
v7tJtw/c7uI/m7ZEhFwx7r/ziT6XnbjlP/A9woWoMOW/2iBupGZS6D+m9oct
D0vOv1rNgu1ZJOs/ZB4KTetj0j+J0D+8VMbtP3twa0+NiOY/WwqypoYt8D+R
Ney8YGPuPz63Ng34k/E/J3FtIGJy7z94j482beLyP9dfaIlRROk/f/LaffdM
9D8hkoyqKxHYPwX2WabgsPU/FPQfJud+wb/iJK2Rzfz2P/luGXLEpeK/jN7y
ms9k+D8uBQOYqQztv43DDGfVtPk/ZDwHeAz5779bMxlR8CD7P7bvr0FSLuu/
p0NZHGqG/D+3jtAlxK3ev0t/barn0/0/PJZGZVnUhr+8RXRWej3/P0YWO7ve
ut8/wpunYohHAEDjkh5uFAPrP+XkrgoD7QBAQ44v6/jY7z9vc69BiKABQI0X
XpK5Xe0/pRcaWg9IAkBHDxQ0wjHkP0EBfgGh/QJAtL2GFQaDwz8cu3sZ4q8D
QJicPo9RLde/oorjEiVWBEA21xHo0hfov4+fRJtyCgVAK250MaVS778oyg8F
wrIFQPCqZGmS2+6/AMV038BXBkBwM+aIBrDnvz4F00jKCgdAd9YreXnA078o
W5uT1bEHQGpa2FXTjcY/ePZcbetmCECEYLSsJb7kP3SniCgDEAlAxYu/NrOw
7T+vKE5UyrUJQO6WctZb4u8/Ue8MD5xpCkChrsxwlYTqP5/LNatvEQtAOSH5
e/RG3j9T7VfWTccLQJPyDcj1wKS/R98Tctt5DEA0c0hBmRbhv+bmOe9qIA1A
tAfWcTGi67/rM1n7BNUNQG9gCdCk/u+/nJbi6KB9DkCgL6z32LTsv4zJBUfs
Ig9AAWACFZUX47/iQSI0QtYPQBJ4HPPhcL2/8mdUAc0+EEBru4LJ2oPXP6ZR
FDB+mRBAN5nYXf0X6T96IyEXh/IQQIWEzxiwke8/JADj7pBFEUAXy+/fa4nu
P4F/IQ6gnxFAJ9eN+g/m5T+0CRUesPMRQLOe0f3kutA/mjaFdcVOEkAzQuJI
jB/Rv59LQoUyqBJAlKEMyv2/5r96a7SFoPsSQAODoxvthu6/CC6jzRNWE0D4
vTgRXlTvv2z7RgaIqhNAzh/hdA/K6L8yFFD6//8TQDTLsN9gaNi/5C3g0A==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6505#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                    GrayLevel[0.75], FontSize -> 11, FontFamily -> 
                    "Ubuntu Mono"], DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 5.}, {-0.9998344481673608, 
                   0.9999999999998582}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "5.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 5.}}, {
       5, 7, 2, {388}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl04W3DwYYBuCfq8e0MSauq2Nquvtiumu4F2Piaqa7xrTNdLM73cxmuk1O
b7rbdD2O95zn/QO+77zBYRE1O0QJBAJDP5REJQaxiUt8EpGU5KQkNcGkJxNZ
yUEu8pKfQhSlBKUpRyiVqUoNalOPhjShGeG0og3tiKAz3ehJb/oxkCEMZxRj
GMdEpjCV6cxiLgtYTCTLWMka1rOJLWxlO7vYywEOc5QTnOIsF7jIFa5zi7s8
4DFPecFr3hHkttGJRRzikZAkJCMFqUhLCBnJQnZykod8FKQIxSlFWSpQiSpU
pxZ1aUBjmhJGS1rTlg8P70RXetCLvgxgMMMYyWjGMoHJ/Mw0ZjKH+SziV5ay
gtWsYyO/8yfb2Mke9nOIIxznH85wnv+4zDVucof7POJ/nvOKt0QJCgSiEZNP
+JQEJOYzPucL0pCODGQmG1+Sm68oQGGKUZIylKciX1ONmtShPo34hua04Fu+
oz0d6UJ3vqcP/RnEUEbwAz8ynkn8xC/MYDbzWMgSfmM5q1jLBjbzB3+xg93s
4yB/c4yTnOYc/3KJq9zgNvd4yBOe8ZI3QR/HH5UYxCYu8UlEUpKTktQEk55M
ZCUHuchLfgpRlBKUphyhVKYqNahNPRrShGaE04o2tCOCznSjJ73px0CGMJxR
jGEcE5nCVKYzi7ksYDGRLGMla1jPJrawle3sYi8HOMxRTnCKs1zgIle4zi3u
8oDHPOUFr3lHUDT7JxZxiEdCkpCMFKQiLSFkJAvZyUke8lGQIhSnFGWpQCWq
UJ1a1KUBjWlKGC1pTVs60Imu9KAXfRnAYIYxktG8B4OWvFU=
        "], CompressedData["
1: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
cEPFOM7noWRdmEHYPHKXPIzu54Tb5kTyQG8OV5aKXTowaCUhfq5nEJUWWeas
fuGFTHWPufnGNaFEqOBys9UAUhI6tK1Anf+Y6Zpk38Wow7DjQ6fGC3pQ6RGT
HbOvBPhoJPBB+qYKFOtKruwebkcp9Bs2vhH8UFJU7q3PbXn4g2/PaNavJhR0
qs2y6iARtnB3iw66SsA3Ag83Wv0qUerURjCpjggFfleUE8nU/iPWMg3/ykH3
9DXe21G99inp65lscVr4PSOKePHFO2D9TTCkgOrBF6+lykf6NpBQZ9H3jyoV
gHnwQ4lROxGqlNxpvOrIj1UlSXY+kY3gJr2AqdYJIlxbUSzbyhDHkjFKqPdg
O6jlz5RjSaH6LnO+tbdaDvvWvBhX5u0FdcXbX/WzCZDO6sCskJYqTr0+vr/L
/C94QWuTJn2HDybX1ThrAQ2cplxtyDYyBLgfUaJ/yvDCUR6fB3lrWjiBefCv
rsUoeOp6erdvOjcUNEmN/nhWF3Nfk30rGjwOeF8Y77tAnU+e+g2fqLmuj8mT
DjJafpPgd0FRQJ0TO7xZlriipGWIuZcKnNI0psGt31oej54zw4grDK+ksoxw
1YccH628GbBL/q2KTxoDHHjFmi3bTsLCm+uG55nJoMG09EY2DQ0MX0a8FV0A
03hcchtioQC+I4yeYUEr4NHrHFndQxAL0CXeLfhAAW9n1wvzUyeBsZxNRtgd
iPfeMZNdWaJ2XLD9bWapVhBd/eWw3wuI993RLOlfp4BFJQHzRsFf6EuKnrIX
1XcSNm3V5ysowLT4+Njn+DH0SNOiMDgC4kueXYX15hQg22/3kO7AItqsH+Pj
cYI40UGtqyCeDBD9oWZxmQ0UeDL/9bYoxLM/X3TRZMyCe+bFkOJFi59a+gcr
PwZ4KLNhhu72DKBh8Hq5osOIX42LjTzMJWH1F8S3FwjTANKWN6z1M2MuugrB
W7FGeLhifxyJup/+XqTyEid2XCD0VECbup/PPMv3r2eMg0RCkMaBfE68MFBT
IZygjxMfJcpKvBsFATRpMjcvcOM7j3+WPS3WxaUGmt0GPsOAzDlJy9XCg80/
Mb5/+VAbJ9ModpoLD4K8qMHr+4T5ME56HyK6VxPvWiOeRXp9gGzv/PY8iYDV
Ny2vnXNVw8lOrp4s650ghHC7r0GTH0sp+0sljihiXkLb++DQFlBPSIsv2uDH
fP7wi0CENB5u9CRs1daCjFi/5n+PiNgUj98YShDF+U2qyvqvvoK9aRw0yhQi
brNgk6VN5cZCPiEPbHLigFFku1IpUQCL9LN66JVNIVupjnf0nQXo/Wbp2jSz
ABbkjyur2mKEe/t+Zi34VqGgVMaTDJVETKCJzqGT2gM/yn6ei25vQpdCf9Nq
HCTibuI93/NXJaC0cKCV0812lCGaOBoWz49/HO/3nliXg/rLDouPm3rQp9Yb
Xg2fCbiw31WEjVMVPl2ftCXPDiCPEklHv0w+LK1uEBU6rA4fultVLp4bQo/P
H/Ryu8aLvx1yQ3k3tGBEmqX38rsRFO8evPKbhwd/vCOlzYN0YPyjmbDP38aQ
iLcaw85TLjx6oDCq5LsevLRt+8vn3QTyK+iSCJ7bjWfbPrPVBxpAfpYbV9cc
ptBa8Wu70AhW7OZSPSiyYgjlnz3/E9w9jUx6ZNpolpnwmoNN2itlEiQSmFwr
RGdRpyQz4Tykx2Rh5Z0hBQAjvLcmxxXI6KvbjBbv4Dba75bW+XQBQKsPatyB
m2T0Xrn0SRRxFVUyM7Y/MIHQEHQZe1D98m60YjDbiYxKrL5HPqH65dG1ufcr
YxQ0tpn6V7H1D2pS/TtQS+2yo3oRbPk7FFRY+Mb2w0QWID9CQuxJEA7Hc972
6aGg8qmPBRlvBsG5oaDlF48gNNG8Ur/3JQVZ2jVmCA3PAO2Zp4latyBMmEzt
NDaioFVT3ed5u5aA532Fit0OEMp8koJ7v5NR2gfFiLXYNcDjr0ObpwyhgiO8
SStDRr9kXUAYyw7QPuJqxkQNuSCptEqbq7NIv0u5+oU2HcxSeen4zQXABNeB
uEeJM+jGJ9rspl4G6Oed7LZTTYItX371WmZNow7yRX+C9y54zmnohzwzCUaX
0943SppC56V5k5dWWKCcc1tUgqIRfFItseyiPYnSVfW0V/6yw6T8tWnpTQOY
J/a953zOOLr017fwQRYnPN2XxaqXpA9DDHjNGbdGEXHs6uCAFDe8R/HOrmfV
gwuWHRznlEbQ5ZRbxQbOPJD0lr0y7oAOlB0/drKVNITaL6X+JoXywutyYnd0
rLTgzUBL0orGX5TykfeFdTQfHJUvsPCR0oDyqnFv5W//QfebDQTbLxDgmUFL
4yfbqnB0SHzijGsXuv4n+kyuOD81iLsjhM8rwf8DTWAaNA==
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}]}],
  SequenceForm[
  "NDSolve[] returns:  ", {$CellContext`x -> 
    InterpolatingFunction[{{0., 5.}}, {
      5, 7, 2, {388}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
      "], {Developer`PackedArrayForm, CompressedData["
1:eJwl04W3DwYYBuCfq8e0MSauq2Nquvtiumu4F2Piaqa7xrTNdLM73cxmuk1O
b7rbdD2O95zn/QO+77zBYRE1O0QJBAJDP5REJQaxiUt8EpGU5KQkNcGkJxNZ
yUEu8pKfQhSlBKUpRyiVqUoNalOPhjShGeG0og3tiKAz3ehJb/oxkCEMZxRj
GMdEpjCV6cxiLgtYTCTLWMka1rOJLWxlO7vYywEOc5QTnOIsF7jIFa5zi7s8
4DFPecFr3hHkttGJRRzikZAkJCMFqUhLCBnJQnZykod8FKQIxSlFWSpQiSpU
pxZ1aUBjmhJGS1rTlg8P70RXetCLvgxgMMMYyWjGMoHJ/Mw0ZjKH+SziV5ay
gtWsYyO/8yfb2Mke9nOIIxznH85wnv+4zDVucof7POJ/nvOKt0QJCgSiEZNP
+JQEJOYzPucL0pCODGQmG1+Sm68oQGGKUZIylKciX1ONmtShPo34hua04Fu+
oz0d6UJ3vqcP/RnEUEbwAz8ynkn8xC/MYDbzWMgSfmM5q1jLBjbzB3+xg93s
4yB/c4yTnOYc/3KJq9zgNvd4yBOe8ZI3QR/HH5UYxCYu8UlEUpKTktQEk55M
ZCUHuchLfgpRlBKUphyhVKYqNahNPRrShGaE04o2tCOCznSjJ73px0CGMJxR
jGEcE5nCVKYzi7ksYDGRLGMla1jPJrawle3sYi8HOMxRTnCKs1zgIle4zi3u
8oDHPOUFr3lHUDT7JxZxiEdCkpCMFKQiLSFkJAvZyUke8lGQIhSnFGWpQCWq
UJ1a1KUBjWlKGC1pTVs60Imu9KAXfRnAYIYxktG8B4OWvFU=
       "], CompressedData["
1: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
cEPFOM7noWRdmEHYPHKXPIzu54Tb5kTyQG8OV5aKXTowaCUhfq5nEJUWWeas
fuGFTHWPufnGNaFEqOBys9UAUhI6tK1Anf+Y6Zpk38Wow7DjQ6fGC3pQ6RGT
HbOvBPhoJPBB+qYKFOtKruwebkcp9Bs2vhH8UFJU7q3PbXn4g2/PaNavJhR0
qs2y6iARtnB3iw66SsA3Ag83Wv0qUerURjCpjggFfleUE8nU/iPWMg3/ykH3
9DXe21G99inp65lscVr4PSOKePHFO2D9TTCkgOrBF6+lykf6NpBQZ9H3jyoV
gHnwQ4lROxGqlNxpvOrIj1UlSXY+kY3gJr2AqdYJIlxbUSzbyhDHkjFKqPdg
O6jlz5RjSaH6LnO+tbdaDvvWvBhX5u0FdcXbX/WzCZDO6sCskJYqTr0+vr/L
/C94QWuTJn2HDybX1ThrAQ2cplxtyDYyBLgfUaJ/yvDCUR6fB3lrWjiBefCv
rsUoeOp6erdvOjcUNEmN/nhWF3Nfk30rGjwOeF8Y77tAnU+e+g2fqLmuj8mT
DjJafpPgd0FRQJ0TO7xZlriipGWIuZcKnNI0psGt31oej54zw4grDK+ksoxw
1YccH628GbBL/q2KTxoDHHjFmi3bTsLCm+uG55nJoMG09EY2DQ0MX0a8FV0A
03hcchtioQC+I4yeYUEr4NHrHFndQxAL0CXeLfhAAW9n1wvzUyeBsZxNRtgd
iPfeMZNdWaJ2XLD9bWapVhBd/eWw3wuI993RLOlfp4BFJQHzRsFf6EuKnrIX
1XcSNm3V5ysowLT4+Njn+DH0SNOiMDgC4kueXYX15hQg22/3kO7AItqsH+Pj
cYI40UGtqyCeDBD9oWZxmQ0UeDL/9bYoxLM/X3TRZMyCe+bFkOJFi59a+gcr
PwZ4KLNhhu72DKBh8Hq5osOIX42LjTzMJWH1F8S3FwjTANKWN6z1M2MuugrB
W7FGeLhifxyJup/+XqTyEid2XCD0VECbup/PPMv3r2eMg0RCkMaBfE68MFBT
IZygjxMfJcpKvBsFATRpMjcvcOM7j3+WPS3WxaUGmt0GPsOAzDlJy9XCg80/
Mb5/+VAbJ9ModpoLD4K8qMHr+4T5ME56HyK6VxPvWiOeRXp9gGzv/PY8iYDV
Ny2vnXNVw8lOrp4s650ghHC7r0GTH0sp+0sljihiXkLb++DQFlBPSIsv2uDH
fP7wi0CENB5u9CRs1daCjFi/5n+PiNgUj98YShDF+U2qyvqvvoK9aRw0yhQi
brNgk6VN5cZCPiEPbHLigFFku1IpUQCL9LN66JVNIVupjnf0nQXo/Wbp2jSz
ABbkjyur2mKEe/t+Zi34VqGgVMaTDJVETKCJzqGT2gM/yn6ei25vQpdCf9Nq
HCTibuI93/NXJaC0cKCV0812lCGaOBoWz49/HO/3nliXg/rLDouPm3rQp9Yb
Xg2fCbiw31WEjVMVPl2ftCXPDiCPEklHv0w+LK1uEBU6rA4fultVLp4bQo/P
H/Ryu8aLvx1yQ3k3tGBEmqX38rsRFO8evPKbhwd/vCOlzYN0YPyjmbDP38aQ
iLcaw85TLjx6oDCq5LsevLRt+8vn3QTyK+iSCJ7bjWfbPrPVBxpAfpYbV9cc
ptBa8Wu70AhW7OZSPSiyYgjlnz3/E9w9jUx6ZNpolpnwmoNN2itlEiQSmFwr
RGdRpyQz4Tykx2Rh5Z0hBQAjvLcmxxXI6KvbjBbv4Dba75bW+XQBQKsPatyB
m2T0Xrn0SRRxFVUyM7Y/MIHQEHQZe1D98m60YjDbiYxKrL5HPqH65dG1ufcr
YxQ0tpn6V7H1D2pS/TtQS+2yo3oRbPk7FFRY+Mb2w0QWID9CQuxJEA7Hc972
6aGg8qmPBRlvBsG5oaDlF48gNNG8Ur/3JQVZ2jVmCA3PAO2Zp4latyBMmEzt
NDaioFVT3ed5u5aA532Fit0OEMp8koJ7v5NR2gfFiLXYNcDjr0ObpwyhgiO8
SStDRr9kXUAYyw7QPuJqxkQNuSCptEqbq7NIv0u5+oU2HcxSeen4zQXABNeB
uEeJM+jGJ9rspl4G6Oed7LZTTYItX371WmZNow7yRX+C9y54zmnohzwzCUaX
0943SppC56V5k5dWWKCcc1tUgqIRfFItseyiPYnSVfW0V/6yw6T8tWnpTQOY
J/a953zOOLr017fwQRYnPN2XxaqXpA9DDHjNGbdGEXHs6uCAFDe8R/HOrmfV
gwuWHRznlEbQ5ZRbxQbOPJD0lr0y7oAOlB0/drKVNITaL6X+JoXywutyYnd0
rLTgzUBL0orGX5TykfeFdTQfHJUvsPCR0oDyqnFv5W//QfebDQTbLxDgmUFL
4yfbqnB0SHzijGsXuv4n+kyuOD81iLsjhM8rwf8DTWAaNA==
       "]}, {Automatic}]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8835313825061207`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"d8e16f0f-e7e9-4e0d-9e96-4fffc57232d9"],

Cell[BoxData["\<\"NDSolve returns an interpolation table - let's put it to \
use!\\n\"\>"], "Print",
 CellChangeTimes->{3.883531382526949*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"b194c20f-e7ae-4ad7-a28f-7bcf1e5cec83"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.755657, 0.61117, 0.154498], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
7b/dzbMV/wMxgr8o
       "]]},
     Annotation[#, "Charting`Private`Tag$6603#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0.75], FontSize -> 11, FontFamily -> "Ubuntu Mono"],
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {-0.9999998855918218, 0.9999999999997881}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8835313825524797`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"cdbbe0e4-4f2c-412a-9394-78b8592b8dd8"],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\nWhat if we over-run the domain of the interpolation \
table?\"\>"], "Print",
 CellChangeTimes->{3.88353138256036*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"051f4c83-dd82-4bdc-b2a2-2882f3260e9b"],

Cell[BoxData["\<\"Short answer - make sure you don't!\"\>"], "Print",
 CellChangeTimes->{3.883531382561872*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"ed29ae6e-64cd-4da4-b4cd-9c1ecd8a8e3c"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.755657, 0.61117, 0.154498], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
T5DxIP51V0X+zmdBdPfAzBWHpEH8dUxQ6l+xIPq5v3vTCBrCD2p+cvT8FkTb
n3NURFwfxv6cX/3i2wTRtrpmsZTSYeyulT5r2SmIWp9bMQOFRvCp9Husn0Pk
epw9X0sTR/C2wAPtn+YE0fnh00aVH0bx+m9qx1yWBZGJr8/eXeOjWHJC/tcm
TiE02Wh41G4HDS/bsJUnCgqhhu/Gd2cyabheu/BjsJwQ+jxUG/ntKR2XuWds
090ghAK1RTrpdXT85U3C68VNQsjOEuSquRg4Rcon0U1NCL189Gh9+GUGjjZ1
lt6mKYQox4gjrkkMfD/o+OMhbSGU1Wt/dq6Ogd0nd90/dVAI3a4Uj1zcysQO
WzZyrTISQtmGvcnXjjPxyfOSt36ZCqHH0w9OPgpg4gP1kx4HjwuhcbIFSWxm
Yol3Wef+uySEUs8e/CHtzMK8fcl/R68Kof2mzyuuP2DhRelwq5ce5P5ypd+7
vmXhwXtXTFb7C6GeOiHtDUMs3F54uuL3XSFkw3zN38VO4LopY92wYCHEoOqJ
bltL4DzbLbs5I4WQm3XdkzsmBH4bt/pT4RMhtGvqeXKwLYGTf/GqXI8XQpb9
ayZlyX47mmc2XS1ZCK0OfjSh/+D/v5cbVmS+EEIG+rUCKwkE9vVsSXqdLoQK
Xqz/op9BYNeMH6ttM4XQ70Kq77pvBLbrz4lemy2ElPY6Dt8l/XRC5qVIa54Q
op+SeuJF+mlTjVom+iaEtkSc5jPvIvCs33ejt1gIKTcYjw+Rfqr8z3xEvEwI
6UG3hDaLwLG9XUF+lWQ8z6z1TEg/OT2+ojhcQ+Y7/b/jMnME1jy4WGzeIITO
KK3f8Yr0E/fMg7P5zULo5MUNXxikh1rSVy8qtguhVZMeXWOkl9JOpseFdpHX
595J/EiOPQU1NWf6yPxdZ/xTIefrFf1oOjcshOa3BEw5kX6ScLV0r6ILob26
B9NtSD8NyPeL7BwTQnF3rm4TJ/306bdbZuKUEPqQ5vQigPTT3SA2Y545IaRb
26f5kfSThWb4iOuSEGrR6V77jPSTwui6e+3swqgn/2OoHumn8fgMRT1uYWS0
RrjuLemnYhPt75n8wsjxytLmetJPEcs/z0qJCKM7WnPTH0k/ncs6vnhbXBid
5ZoJO0r6SdV2OI4mJYw8kq+fzCH9VP+Dq7lwvTCi791mlEt6Kcn7sbuykjA6
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
p7s=
       "]]},
     Annotation[#, "Charting`Private`Tag$6656#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0.75], FontSize -> 11, FontFamily -> "Ubuntu Mono"],
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {-3.6549731754825134`, 3.8041746899500906`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.883531382601323*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"244f8449-7771-4c03-9790-05753377bb7d"]
}, Open  ]],

Cell["\<\

Finally - let\[CloseCurlyQuote]s finish that oscillator example we started!  \
See if you can figure out what each line is doing before you run the cell...
 \
\>", "Text",
 CellChangeTimes->{{3.883181181278983*^9, 3.8831812124606256`*^9}, {
  3.883181277948881*^9, 3.883181296496975*^9}, {3.8831819416438293`*^9, 
  3.883181980237896*^9}},ExpressionUUID->"761db8e4-9e8e-4f66-b0b5-\
5af329b6f7c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Teach", " ", "Mathematica", " ", "some", " ", "physics"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\[Beta]", ",", "\[Omega]0", ",", "\[CapitalOmega]", ",", "F0", ",", 
          "A", ",", "t"}], "}"}], ",", "Reals"}], "]"}], "&&", " ", 
      RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
      RowBox[{"\[Beta]", "<", "\[Omega]0"}], " ", "&&", " ", 
      RowBox[{"\[Omega]0", ">", "0"}], " ", "&&", " ", 
      RowBox[{"\[CapitalOmega]", ">", "0"}], " ", "&&", " ", 
      RowBox[{"F0", ">", "0"}], " ", "&&", " ", 
      RowBox[{"A", ">", "0"}], " ", "&&", " ", 
      RowBox[{"t", ">", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Switches", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"driven", " ", "=", " ", "False"}], ";"}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Set", " ", "to", " ", "True", " ", "to", " ", "simulate", " ", "a", " ", 
     "sinusoidally"}], "-", 
    RowBox[{"driven", " ", "oscillator"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"version13", " ", "=", " ", "False"}], ";"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Set", " ", "to", " ", "True", " ", "to", " ", "correctly", " ", 
    "position", " ", "the", " ", "plot", " ", "levers"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                   "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
            "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
    "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "the", " ", "diff", " ", "eq"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "t_", "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{"driven", ",", 
    RowBox[{
     RowBox[{"F", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"F0", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[CapitalOmega]", " ", "t"}], "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"osc", "[", "\[Beta]_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
      RowBox[{"2", " ", "\[Beta]", " ", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
      RowBox[{
       SuperscriptBox["\[Omega]0", "2"], " ", 
       RowBox[{"x", "[", "t", "]"}]}]}], " ", "==", " ", 
     RowBox[{"F", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "DSolve"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diffeq", "[", "\[Beta]_", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"osc", "[", "\[Beta]", "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iclist", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "==", "x0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "==", "v0x"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eqnlist", "[", "\[Beta]_", "]"}], "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"diffeq", "[", "\[Beta]", "]"}], ",", "iclist"}], "]"}]}], 
   ";"}], "     ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"diff", " ", "eq"}], " ", "+", " ", 
    RowBox[{"initial", " ", "conditions"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"soln", "[", "\[Beta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"DSolve", "[", 
       RowBox[{
        RowBox[{"eqnlist", "[", "\[Beta]", "]"}], ",", 
        RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "//", "FullSimplify"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "we", " ", "make", " ", "this", " ", "a", " ", "delayed", " ", 
     "assignment"}], ",", " ", 
    RowBox[{"critical", " ", "damping", " ", "works"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"but", " ", "the", " ", "plots", " ", 
    RowBox[{"break", "!"}], "  ", "So", " ", 
    RowBox[{"we", "'"}], "ll", " ", "sacrifice", " ", "critical", " ", 
    "damping"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "to", " ", "get", " ", "a", " ", "plot", " ", "that", " ", "works", " ", 
    "everywhere", " ", "but", " ", "at", " ", "critical", " ", "damping"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"\[Beta]_", ",", "t_"}], "]"}], "=", " ", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/.", 
     RowBox[{"soln", "[", "\[Beta]", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\\nFor Critical Damping, x[t] = \>\"", ",", 
   RowBox[{"x", "[", 
    RowBox[{"\[Omega]0", ",", "t"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Otherwise, x[t] = \>\"", ",", 
    RowBox[{"x", "[", 
     RowBox[{"\[Beta]", ",", "t"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "How", " ", "does", " ", "this", " ", "stack", " ", "up", " ", "against", 
    " ", "1", "B", " ", "??"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p1brule", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x0", "->", "A"}], ",", 
      RowBox[{"v0x", "->", "0"}], ",", 
      RowBox[{"F0", "->", "0"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\\nFree Osc x[t] = \>\"", ",", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"0", ",", "t"}], "]"}], "/.", "p1brule"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\\nDamped Osc x[t] = \>\"", ",", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"\[Beta]", ",", "t"}], "]"}], "/.", "p1brule"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\\nCrit Damped x[t] = \>\"", ",", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"\[Omega]0", ",", "t"}], "]"}], "/.", "p1brule"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<\\n...and yes, we know about the problem at critical damping!\>\"", 
   "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "Plot"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Physical", " ", "Parameters"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", " ", "=", " ", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v0x", " ", "=", " ", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", " ", "=", " ", 
   RowBox[{"2", " ", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]", " ", "=", " ", 
   RowBox[{"0.95", " ", "\[Omega]0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F0", " ", "=", " ", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tlo", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thi", "=", "5"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "Parameters"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"range", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "thi"}], "}"}], ",", 
      RowBox[{"1.2", " ", "x0", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"traj", "[", "\[Beta]_", "]"}], ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"x", "[", 
       RowBox[{"\[Beta]", ",", "t"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "range"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"points", "[", 
     RowBox[{"\[Beta]_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"x", "[", 
            RowBox[{"\[Beta]", ",", "t"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
       "Red", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"x", "[", 
            RowBox[{"\[Beta]", ",", "t"}], "]"}], "]"}]}], "}"}], "]"}]}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pix", "[", 
    RowBox[{"\[Beta]_", ",", "t_"}], "]"}], ":=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"traj", "[", "\[Beta]", "]"}], ",", 
     RowBox[{"points", "[", 
      RowBox[{"\[Beta]", ",", "t"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"If", "[", 
    RowBox[{"condition", ",", "then", ",", "else"}], "]"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Because", " ", "ControlPlacement", " ", "is", " ", "a", " ", "V13", " ", 
    "thing"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{"version13", ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Animate", "[", 
      RowBox[{
       RowBox[{"pix", "[", 
        RowBox[{"\[Beta]", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}], ",", 
       RowBox[{"ControlPlacement", "->", "Top"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", " ", "\[Omega]0"}]}], "}"}], ",", 
     RowBox[{"ControlPlacement", "->", "Top"}]}], " ", "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Animate", "[", 
      RowBox[{
       RowBox[{"pix", "[", 
        RowBox[{"\[Beta]", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", " ", "\[Omega]0"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.883153519054607*^9, 3.883153672109055*^9}, {
   3.8831537157028074`*^9, 3.8831539556559305`*^9}, {3.8831540247965155`*^9, 
   3.8831540784684315`*^9}, {3.8831541517028065`*^9, 
   3.8831541552496862`*^9}, {3.8831541866246243`*^9, 3.883154306140256*^9}, {
   3.8831549606246877`*^9, 3.8831551522496862`*^9}, {3.8831552077496257`*^9, 
   3.8831553519058723`*^9}, {3.8831554362027473`*^9, 
   3.8831554984527483`*^9}, {3.88315558659339*^9, 3.883155788874681*^9}, {
   3.8831558743590612`*^9, 3.8831559167027636`*^9}, {3.88315595407775*^9, 
   3.883155957140248*^9}, {3.8831559973433914`*^9, 3.8831560144683747`*^9}, {
   3.8831561817183905`*^9, 3.883156204265258*^9}, 3.8831563241715*^9, {
   3.8831563815464983`*^9, 3.8831564362653065`*^9}, {3.883156524093375*^9, 
   3.8831565415465546`*^9}, {3.8831566297808824`*^9, 
   3.8831566609683757`*^9}, {3.8831568584214964`*^9, 3.883156858843382*^9}, {
   3.8831572654527555`*^9, 3.883157344312129*^9}, {3.883181229295414*^9, 
   3.883181272285852*^9}, {3.8831813348413973`*^9, 3.883181607063096*^9}, {
   3.883181654506443*^9, 3.883181833648645*^9}, 3.883181869346323*^9, {
   3.8831819944500504`*^9, 3.883182135500442*^9}, {3.8831822373393784`*^9, 
   3.8831823453984623`*^9}, 3.883182576739897*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"895d0a50-719e-4497-816b-ef79f8a575c7"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", SqrtBox[\\\"0\\\"]]\
\\) encountered.\"", 2, 71, 7, 31646006837394961189, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883531415201666*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"0cb54465-50ec-445a-840b-94ba4fa82a32"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"v0x\\\", \\\"+\\\", RowBox[{\\\"x0\\\", \\\" \
\\\", \\\"\[Omega]0\\\"}]}], \\\")\\\"}], \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 71, 8, 31646006837394961189, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883531415254578*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"a1ed5dbf-8dd3-4036-a079-44cc36f08c73"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nFor Critical Damping, x[t] = \"\>", "\[InvisibleSpace]", 
   "Indeterminate"}],
  SequenceForm["\nFor Critical Damping, x[t] = ", Indeterminate],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531415295018*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"6e047032-58f9-4783-a7f2-12dd155cb7ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Otherwise, x[t] = \"\>", "\[InvisibleSpace]", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[Beta]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x0", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Beta]", "2"]}], "+", 
           SuperscriptBox["\[Omega]0", "2"]}]]}], "]"}]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v0x", "+", 
          RowBox[{"x0", " ", "\[Beta]"}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Beta]", "2"]}], "+", 
            SuperscriptBox["\[Omega]0", "2"]}]]}], "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SuperscriptBox["\[Omega]0", "2"]}]]]}], ")"}]}]}],
  SequenceForm[
  "Otherwise, x[t] = ", 
   E^(-$CellContext`t $CellContext`\[Beta]) ($CellContext`x0 
     Cos[$CellContext`t (-$CellContext`\[Beta]^2 + $CellContext`\[Omega]0^2)^
        Rational[
         1, 2]] + ($CellContext`v0x + $CellContext`x0 $CellContext`\[Beta]) \
(-$CellContext`\[Beta]^2 + $CellContext`\[Omega]0^2)^Rational[-1, 2] 
     Sin[$CellContext`t (-$CellContext`\[Beta]^2 + $CellContext`\[Omega]0^2)^
        Rational[1, 2]])],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531415296906*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"41fad5fb-437e-43dc-8f91-cd9623f4bcca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nFree Osc x[t] = \"\>", "\[InvisibleSpace]", 
   RowBox[{"A", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"t", " ", 
      SqrtBox[
       SuperscriptBox["\[Omega]0", "2"]]}], "]"}]}]}],
  SequenceForm[
  "\nFree Osc x[t] = ", $CellContext`A 
   Cos[$CellContext`t ($CellContext`\[Omega]0^2)^Rational[1, 2]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8835314153110113`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"6e228fc2-c956-45ce-bf80-c5afc6702e68"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nDamped Osc x[t] = \"\>", "\[InvisibleSpace]", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], " ", "\[Beta]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[Beta]", "2"]}], "+", 
           SuperscriptBox["\[Omega]0", "2"]}]]}], "]"}]}], "+", 
      FractionBox[
       RowBox[{"A", " ", "\[Beta]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Beta]", "2"]}], "+", 
            SuperscriptBox["\[Omega]0", "2"]}]]}], "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SuperscriptBox["\[Omega]0", "2"]}]]]}], ")"}]}]}],
  SequenceForm[
  "\nDamped Osc x[t] = ", 
   E^(-$CellContext`t $CellContext`\[Beta]) ($CellContext`A 
     Cos[$CellContext`t (-$CellContext`\[Beta]^2 + $CellContext`\[Omega]0^2)^
        Rational[
         1, 2]] + $CellContext`A $CellContext`\[Beta] \
(-$CellContext`\[Beta]^2 + $CellContext`\[Omega]0^2)^Rational[-1, 2] 
     Sin[$CellContext`t (-$CellContext`\[Beta]^2 + $CellContext`\[Omega]0^2)^
        Rational[1, 2]])],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531415312995*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"f6fb46c4-4e19-401d-8068-8096c5ff14ec"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", SqrtBox[\\\"0\\\"]]\
\\) encountered.\"", 2, 76, 9, 31646006837394961189, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.883531415314766*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"0cc0ff94-8132-4bcf-b7e7-0db24df23707"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"v0x\\\", \\\"+\\\", RowBox[{\\\"x0\\\", \\\" \
\\\", \\\"\[Omega]0\\\"}]}], \\\")\\\"}], \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 76, 10, 31646006837394961189,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8835314153361273`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"6b910fef-167a-45ee-8828-0ab90f00ef12"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nCrit Damped x[t] = \"\>", "\[InvisibleSpace]", 
   "Indeterminate"}],
  SequenceForm["\nCrit Damped x[t] = ", Indeterminate],
  Editable->False]], "Print",
 CellChangeTimes->{3.883531415392334*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"a9c78f7b-0b47-455e-902f-981db7e8f699"],

Cell[BoxData["\<\"\\n...and yes, we know about the problem at critical \
damping!\"\>"], "Print",
 CellChangeTimes->{3.883531415396226*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"9c55d1a8-5b7b-4008-af92-9eda631be372"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Beta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Beta]$$], 0, 4 Pi}}, Typeset`size$$ = {
    506., {174.025390625, 180.974609375}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Beta]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Animate[
        $CellContext`pix[$CellContext`\[Beta]$$, $CellContext`t], \
{$CellContext`t, $CellContext`tlo, $CellContext`thi}], 
      "Specifications" :> {{$CellContext`\[Beta]$$, 0, 4 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{562., {229.025390625, 235.974609375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.883531415428316*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"54f3b1d5-07c1-432c-924c-302741cc8c3d"]
}, Open  ]],

Cell["\<\

As I mentioned at the end, one can usually solve problems like our critical \
damping problem by switching to a numerical solution.  We\[CloseCurlyQuote]ll \
have to hack things up a bit, inculding:
* Move the numerical parameters BEFORE the call to NDSolve[]
* Change DSolve[eqnlist,x[t],t] to NDSolve[eqnlist,x,{t,tlo,thi}]
* No need for //FullSimplify on NDSolve[]  !
* Get rid of the glamour shots (x[t] = ... for free, damped, driven
* We\[CloseCurlyQuote]ll probably have to ditch x[\[Beta],t] in favor of \
x[t]/.soln[\[Beta]]

NDSolve [] often evaluates faster than DSolve, too  8*)

In truth, using x[t]/.soln[\[Beta]] would probably have been easier to use \
and maintain (in the previous cell) than x[\[Beta],t].  Might be good \
practice to see if you can back-port this into
the previous cell without breaking things 8*)          Here goes NDSolve - \
\>", "Text",
 CellChangeTimes->{{3.883182689234743*^9, 3.8831831804577923`*^9}, {
  3.883183459795844*^9, 3.883183486144691*^9}, {3.883183672192779*^9, 
  3.8831837373291807`*^9}},ExpressionUUID->"2c09b049-7443-4cf2-b6b9-\
d4744832c5c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Teach", " ", "Mathematica", " ", "some", " ", "physics"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\[Beta]", ",", "\[Omega]0", ",", "\[CapitalOmega]", ",", "F0", ",", 
          "A", ",", "t"}], "}"}], ",", "Reals"}], "]"}], "&&", " ", 
      RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
      RowBox[{"\[Beta]", "<", "\[Omega]0"}], " ", "&&", " ", 
      RowBox[{"\[Omega]0", ">", "0"}], " ", "&&", " ", 
      RowBox[{"\[CapitalOmega]", ">", "0"}], " ", "&&", " ", 
      RowBox[{"F0", ">", "0"}], " ", "&&", " ", 
      RowBox[{"A", ">", "0"}], " ", "&&", " ", 
      RowBox[{"t", ">", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Switches", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"driven", " ", "=", " ", "False"}], ";"}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Set", " ", "to", " ", "True", " ", "to", " ", "simulate", " ", "a", " ", 
     "sinusoidally"}], "-", 
    RowBox[{"driven", " ", "oscillator"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"version13", " ", "=", " ", "False"}], ";"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Set", " ", "to", " ", "True", " ", "to", " ", "correctly", " ", 
    "position", " ", "the", " ", "plot", " ", "levers"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                   "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
            "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
    "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "the", " ", "diff", " ", "eq"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "t_", "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", " ", 
   RowBox[{"driven", ",", 
    RowBox[{
     RowBox[{"F", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"F0", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[CapitalOmega]", " ", "t"}], "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"osc", "[", "\[Beta]_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], " ", "+", " ", 
      RowBox[{"2", " ", "\[Beta]", " ", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
      RowBox[{
       SuperscriptBox["\[Omega]0", "2"], " ", 
       RowBox[{"x", "[", "t", "]"}]}]}], " ", "==", " ", 
     RowBox[{"F", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "NDSolve"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"A", " ", "numerical", " ", "solution", " ", "needs", " ", 
    RowBox[{"numbers", "!"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", " ", "=", " ", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v0x", " ", "=", " ", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", " ", "=", " ", 
   RowBox[{"2", " ", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]", " ", "=", " ", 
   RowBox[{"0.95", " ", "\[Omega]0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F0", " ", "=", " ", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tlo", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thi", "=", "5"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diffeq", "[", "\[Beta]_", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"osc", "[", "\[Beta]", "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iclist", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "==", "x0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "==", "v0x"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eqnlist", "[", "\[Beta]_", "]"}], "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"diffeq", "[", "\[Beta]", "]"}], ",", "iclist"}], "]"}]}], 
   ";"}], "     ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"diff", " ", "eq"}], " ", "+", " ", 
    RowBox[{"initial", " ", "conditions"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"MIND", " ", "THE", " ", 
    RowBox[{"GAP", "!"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"soln", "[", "\[Beta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"eqnlist", "[", "\[Beta]", "]"}], ",", "x", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Now", " ", "-", " ", 
     RowBox[{
      RowBox[{"we", "'"}], "ll", " ", "use", " ", 
      RowBox[{"x", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"soln", "[", "\[Beta]", "]"}], " ", "whereever", " ", "there", 
     " ", "was", " ", "an", " ", 
     RowBox[{"x", "[", 
      RowBox[{"\[Beta]", ",", "t"}], "]"}], " ", "before"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "Plot"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "Parameters"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"range", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "thi"}], "}"}], ",", 
      RowBox[{"1.2", " ", "x0", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**"}], "******)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"traj", "[", "\[Beta]_", "]"}], ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "/.", 
       RowBox[{"soln", "[", "\[Beta]", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", "range"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"points", "[", 
     RowBox[{"\[Beta]_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "/.", 
            RowBox[{"soln", "[", "\[Beta]", "]"}]}], "]"}]}], "}"}], "]"}], 
       ",", "Red", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "/.", 
            RowBox[{"soln", "[", "\[Beta]", "]"}]}], "]"}]}], "}"}], "]"}]}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pix", "[", 
    RowBox[{"\[Beta]_", ",", "t_"}], "]"}], ":=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"traj", "[", "\[Beta]", "]"}], ",", 
     RowBox[{"points", "[", 
      RowBox[{"\[Beta]", ",", "t"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<\\nClick the + sign at the end of the \[Beta] slider\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<and type \[Omega]0 into the value box.  The plot works\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<for critical damping!!\>\"", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"If", "[", 
    RowBox[{"condition", ",", "then", ",", "else"}], "]"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Because", " ", "ControlPlacement", " ", "is", " ", "a", " ", "V13", " ", 
    "thing"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{"version13", ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Animate", "[", 
      RowBox[{
       RowBox[{"pix", "[", 
        RowBox[{"\[Beta]", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}], ",", 
       RowBox[{"ControlPlacement", "->", "Top"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", " ", "\[Omega]0"}]}], "}"}], ",", 
     RowBox[{"ControlPlacement", "->", "Top"}]}], " ", "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Animate", "[", 
      RowBox[{
       RowBox[{"pix", "[", 
        RowBox[{"\[Beta]", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "tlo", ",", "thi"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", 
       RowBox[{"2", " ", "\[Omega]0"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.883153519054607*^9, 3.883153672109055*^9}, {
   3.8831537157028074`*^9, 3.8831539556559305`*^9}, {3.8831540247965155`*^9, 
   3.8831540784684315`*^9}, {3.8831541517028065`*^9, 
   3.8831541552496862`*^9}, {3.8831541866246243`*^9, 3.883154306140256*^9}, {
   3.8831549606246877`*^9, 3.8831551522496862`*^9}, {3.8831552077496257`*^9, 
   3.8831553519058723`*^9}, {3.8831554362027473`*^9, 
   3.8831554984527483`*^9}, {3.88315558659339*^9, 3.883155788874681*^9}, {
   3.8831558743590612`*^9, 3.8831559167027636`*^9}, {3.88315595407775*^9, 
   3.883155957140248*^9}, {3.8831559973433914`*^9, 3.8831560144683747`*^9}, {
   3.8831561817183905`*^9, 3.883156204265258*^9}, 3.8831563241715*^9, {
   3.8831563815464983`*^9, 3.8831564362653065`*^9}, {3.883156524093375*^9, 
   3.8831565415465546`*^9}, {3.8831566297808824`*^9, 
   3.8831566609683757`*^9}, {3.8831568584214964`*^9, 3.883156858843382*^9}, {
   3.8831572654527555`*^9, 3.883157344312129*^9}, {3.883181229295414*^9, 
   3.883181272285852*^9}, {3.8831813348413973`*^9, 3.883181607063096*^9}, {
   3.883181654506443*^9, 3.883181833648645*^9}, 3.883181869346323*^9, {
   3.8831819944500504`*^9, 3.883182135500442*^9}, {3.8831822373393784`*^9, 
   3.8831823453984623`*^9}, 3.883182576739897*^9, {3.883183199958014*^9, 
   3.883183383184729*^9}, {3.883183418431889*^9, 3.8831834519492598`*^9}, {
   3.8831835323048553`*^9, 3.8831836379331303`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"895d0a50-719e-4497-816b-ef79f8a575c7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\nClick the + sign at the end of the \[Beta] slider\"\>"], \
"Print",
 CellChangeTimes->{3.883531683815247*^9},
 CellLabel->
  "During evaluation of \
In[90]:=",ExpressionUUID->"c3809bc9-0340-44d4-97f1-4e595766cf19"],

Cell[BoxData["\<\"and type \[Omega]0 into the value box.  The plot \
works\"\>"], "Print",
 CellChangeTimes->{3.88353168382087*^9},
 CellLabel->
  "During evaluation of \
In[90]:=",ExpressionUUID->"7f416e79-c0c0-445e-bc6b-ddc0b6ba76fa"],

Cell[BoxData["\<\"for critical damping!!\"\>"], "Print",
 CellChangeTimes->{3.8835316838248367`*^9},
 CellLabel->
  "During evaluation of \
In[90]:=",ExpressionUUID->"0de9ca4a-faeb-452c-8718-bf72a0c87570"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Beta]$$ = 2.6640705702441445`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Beta]$$], 0, 4 Pi}}, Typeset`size$$ = {
    506., {174.025390625, 180.974609375}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Beta]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Animate[
        $CellContext`pix[$CellContext`\[Beta]$$, $CellContext`t], \
{$CellContext`t, $CellContext`tlo, $CellContext`thi}], 
      "Specifications" :> {{$CellContext`\[Beta]$$, 0, 4 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{562., {229.025390625, 235.974609375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.883531683856956*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"6c96655e-c135-4794-bcf1-591197f12be1"]
}, Open  ]]
},
WindowSize->{1386, 762},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"48a1cdfe-f7c1-425b-bf7c-68fb7ce1c85d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 421, 9, 71, "Text",ExpressionUUID->"43fa8c35-49bb-4f08-8d31-c43c346366e6"],
Cell[CellGroupData[{
Cell[1004, 33, 8693, 211, 1623, "Input",ExpressionUUID->"bf1ca5d3-12fb-412d-8bb0-d5197fec7022"],
Cell[CellGroupData[{
Cell[9722, 248, 248, 5, 55, "Print",ExpressionUUID->"cf2ea221-e91a-4119-90e2-b16d3d58a509"],
Cell[9973, 255, 986, 30, 32, "Print",ExpressionUUID->"e5970178-170e-4eec-a236-b68ab3cb1da5"],
Cell[10962, 287, 1007, 26, 32, "Print",ExpressionUUID->"dcbd4e80-4b12-4355-9806-6438e4f5ff37"],
Cell[11972, 315, 230, 5, 79, "Print",ExpressionUUID->"915eaba3-2bb0-448a-8dd5-7ef4e011b072"]
}, Open  ]],
Cell[12217, 323, 357, 9, 35, "Message",ExpressionUUID->"c45443dd-7346-4108-a3bf-d289fb555529"],
Cell[CellGroupData[{
Cell[12599, 336, 232, 5, 31, "Print",ExpressionUUID->"2131f19d-957d-4240-b1c3-1439d61b32d5"],
Cell[12834, 343, 235, 5, 55, "Print",ExpressionUUID->"9fda154a-f01d-4106-b126-81894875f496"],
Cell[13072, 350, 234, 5, 31, "Print",ExpressionUUID->"a28a7ec1-2edb-4a8f-95e8-0579c5f58912"],
Cell[13309, 357, 705, 20, 56, "Print",ExpressionUUID->"95b2b635-99ab-436e-bd7f-c06ed89f34fe"],
Cell[14017, 379, 234, 5, 55, "Print",ExpressionUUID->"d330f60b-e904-4128-a36f-3562f977f0d9"],
Cell[14254, 386, 231, 5, 31, "Print",ExpressionUUID->"c03a226b-d29e-4170-ad93-33e14e65ba99"],
Cell[14488, 393, 239, 5, 55, "Print",ExpressionUUID->"4608159e-9677-49d9-ab46-d77f56c04cf4"]
}, Open  ]],
Cell[14742, 401, 360, 9, 35, "Message",ExpressionUUID->"78f4425e-cf07-4c03-9e7d-a88e4152c3ca"],
Cell[CellGroupData[{
Cell[15127, 414, 204, 4, 31, "Print",ExpressionUUID->"87a266fd-9897-4401-a979-20fa184bd930"],
Cell[15334, 420, 674, 20, 32, "Print",ExpressionUUID->"d48781e4-0bf6-4b44-912b-eaae0687ddad"],
Cell[16011, 442, 251, 5, 79, "Print",ExpressionUUID->"48c89141-37b3-4ff0-ace2-aea46f024d50"]
}, Open  ]],
Cell[16277, 450, 28481, 486, 307, "Output",ExpressionUUID->"be807e2d-9c7d-4b21-bdfd-512c6bc86901"],
Cell[CellGroupData[{
Cell[44783, 940, 229, 5, 55, "Print",ExpressionUUID->"f2203771-ee57-46c1-b3b4-5583500efb94"],
Cell[45015, 947, 236, 5, 31, "Print",ExpressionUUID->"b2145717-fca3-47b5-b935-352fa6eb3460"],
Cell[45254, 954, 493, 13, 31, "Print",ExpressionUUID->"809bbfd3-f2ef-4fd6-8115-934ced27a085"],
Cell[45750, 969, 486, 13, 31, "Print",ExpressionUUID->"e20f05d6-d3bd-4d93-a71f-96b992c74f6a"],
Cell[46239, 984, 488, 13, 31, "Print",ExpressionUUID->"22c616e7-d891-4f3b-9e75-c0082684d1d5"],
Cell[46730, 999, 245, 5, 31, "Print",ExpressionUUID->"bf92a32f-bc2f-4310-bfb3-8f84c7296de7"]
}, Open  ]]
}, Open  ]],
Cell[47002, 1008, 299, 13, 215, "Text",ExpressionUUID->"0f9aecc3-a106-46d1-b3d1-f850df94e3f2"],
Cell[CellGroupData[{
Cell[47326, 1025, 11647, 305, 1784, "Input",ExpressionUUID->"f376d841-ea2a-49c2-9e41-067fba7047c4"],
Cell[CellGroupData[{
Cell[58998, 1334, 816, 21, 32, "Print",ExpressionUUID->"755a0fb3-2b8c-48cc-971f-eca32b84bc19"],
Cell[59817, 1357, 528, 18, 32, "Print",ExpressionUUID->"e059e091-8ab6-4174-b948-a30910f8f605"],
Cell[60348, 1377, 217, 4, 31, "Print",ExpressionUUID->"01114f8c-e491-4132-9d33-ce0a20fe2b12"],
Cell[60568, 1383, 245, 5, 55, "Print",ExpressionUUID->"d7095cac-5d9a-4ad4-afd4-a70258ff60b9"],
Cell[60816, 1390, 1144, 30, 32, "Print",ExpressionUUID->"82aea9c6-5569-4dd2-8945-93c80e1f52ee"],
Cell[61963, 1422, 344, 10, 32, "Print",ExpressionUUID->"f94044b8-6ecb-4c1a-9f92-d25b96983333"],
Cell[62310, 1434, 254, 5, 55, "Print",ExpressionUUID->"2894585e-452f-438d-89a8-bcf77d0b0619"]
}, Open  ]],
Cell[62579, 1442, 453, 11, 35, "Message",ExpressionUUID->"29928c85-8553-4ace-8e5f-2659fc0733aa"],
Cell[63035, 1455, 368, 9, 35, "Message",ExpressionUUID->"e26f18d2-f0a0-4f83-acf6-02223be7e8ad"],
Cell[63406, 1466, 368, 9, 35, "Message",ExpressionUUID->"237f706b-4912-4675-959f-e98548690549"],
Cell[63777, 1477, 389, 9, 35, "Message",ExpressionUUID->"331f4a09-cbc1-4c2d-9789-04ab25574c43"],
Cell[CellGroupData[{
Cell[64191, 1490, 1190, 30, 32, "Print",ExpressionUUID->"72c1411e-a57b-4966-8995-bb7fcefad78c"],
Cell[65384, 1522, 260, 7, 29, "Print",ExpressionUUID->"aceef128-fc9a-4344-ac5a-bf8a589d32a6"],
Cell[65647, 1531, 216, 4, 31, "Print",ExpressionUUID->"21c6d36a-63c2-4378-9c0f-7e1724bc9aee"],
Cell[65866, 1537, 240, 5, 79, "Print",ExpressionUUID->"4e06d257-224a-4285-86d6-eda38a2c818f"],
Cell[66109, 1544, 49247, 861, 68, "Print",ExpressionUUID->"d8e16f0f-e7e9-4e0d-9e96-4fffc57232d9"],
Cell[115359, 2407, 247, 5, 55, "Print",ExpressionUUID->"b194c20f-e7ae-4ad7-a28f-7bcf1e5cec83"]
}, Open  ]],
Cell[115621, 2415, 26608, 456, 293, "Output",ExpressionUUID->"cdbbe0e4-4f2c-412a-9394-78b8592b8dd8"],
Cell[CellGroupData[{
Cell[142254, 2875, 243, 5, 55, "Print",ExpressionUUID->"051f4c83-dd82-4bdc-b2a2-2882f3260e9b"],
Cell[142500, 2882, 216, 4, 31, "Print",ExpressionUUID->"ed29ae6e-64cd-4da4-b4cd-9c1ecd8a8e3c"]
}, Open  ]],
Cell[142731, 2889, 27206, 466, 306, "Output",ExpressionUUID->"244f8449-7771-4c03-9790-05753377bb7d"]
}, Open  ]],
Cell[169952, 3358, 407, 9, 100, "Text",ExpressionUUID->"761db8e4-9e8e-4f66-b0b5-5af329b6f7c0"],
Cell[CellGroupData[{
Cell[170384, 3371, 14755, 392, 2148, "Input",ExpressionUUID->"895d0a50-719e-4497-816b-ef79f8a575c7"],
Cell[185142, 3765, 378, 9, 52, "Message",ExpressionUUID->"0cb54465-50ec-445a-840b-94ba4fa82a32"],
Cell[185523, 3776, 537, 12, 35, "Message",ExpressionUUID->"a1ed5dbf-8dd3-4036-a079-44cc36f08c73"],
Cell[CellGroupData[{
Cell[186085, 3792, 374, 9, 55, "Print",ExpressionUUID->"6e047032-58f9-4783-a7f2-12dd155cb7ef"],
Cell[186462, 3803, 1678, 47, 69, "Print",ExpressionUUID->"41fad5fb-437e-43dc-8f91-cd9623f4bcca"],
Cell[188143, 3852, 539, 15, 61, "Print",ExpressionUUID->"6e228fc2-c956-45ce-bf80-c5afc6702e68"],
Cell[188685, 3869, 1576, 44, 97, "Print",ExpressionUUID->"f6fb46c4-4e19-401d-8068-8096c5ff14ec"]
}, Open  ]],
Cell[190276, 3916, 378, 9, 52, "Message",ExpressionUUID->"0cc0ff94-8132-4bcf-b7e7-0db24df23707"],
Cell[190657, 3927, 540, 12, 35, "Message",ExpressionUUID->"6b910fef-167a-45ee-8828-0ab90f00ef12"],
Cell[CellGroupData[{
Cell[191222, 3943, 354, 9, 55, "Print",ExpressionUUID->"a9c78f7b-0b47-455e-902f-981db7e8f699"],
Cell[191579, 3954, 244, 5, 55, "Print",ExpressionUUID->"9c55d1a8-5b7b-4008-af92-9eda631be372"]
}, Open  ]],
Cell[191838, 3962, 1716, 34, 497, "Output",ExpressionUUID->"54f3b1d5-07c1-432c-924c-302741cc8c3d"]
}, Open  ]],
Cell[193569, 3999, 1113, 22, 416, "Text",ExpressionUUID->"2c09b049-7443-4cf2-b6b9-d4744832c5c8"],
Cell[CellGroupData[{
Cell[194707, 4025, 13090, 342, 1858, "Input",ExpressionUUID->"895d0a50-719e-4497-816b-ef79f8a575c7"],
Cell[CellGroupData[{
Cell[207822, 4371, 235, 5, 55, "Print",ExpressionUUID->"c3809bc9-0340-44d4-97f1-4e595766cf19"],
Cell[208060, 4378, 236, 5, 31, "Print",ExpressionUUID->"7f416e79-c0c0-445e-bc6b-ddc0b6ba76fa"],
Cell[208299, 4385, 205, 4, 31, "Print",ExpressionUUID->"0de9ca4a-faeb-452c-8718-bf72a0c87570"]
}, Open  ]],
Cell[208519, 4392, 1738, 35, 513, "Output",ExpressionUUID->"6c96655e-c135-4794-bcf1-591197f12be1"]
}, Open  ]]
}
]
*)

